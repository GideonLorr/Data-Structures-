#include<iostream>
#include<vector>
#include<time.h>
using std::vector;
using std::cin;
using std::cout;

//our swap function
template<typename T>
void Swap(T& left, T& right) {
	T temp = left;
	left = right;
	right = temp;
}

// *****************************************************************************************************************************************************
// Shell Sort implementation
// reference: https://en.wikipedia.org/wiki/Shellsort
template<typename T>
void Shell_Sort(T& to_be_sorted, int left, int right) {
	int h;
	for (h = 1; h <= (right - left)/9; h = 3 * h + 1);
	for (; h > 0; h /= 3)
		for (int i = left + h; i < right; ++i)
		{
			int j = i; 
			typename T::value_type temp = to_be_sorted[i];

			while (j >= left + h && temp < to_be_sorted[j - h])
			{
				to_be_sorted[j] = to_be_sorted[j - h]; 
				j -= h;
			}

			to_be_sorted[j] = temp;
		}
}
// *****************************************************************************************************************************************************

int main() {
	vector<int> vec;
	srand((unsigned int)time(NULL));

	for (size_t i = 0; i < 10; ++i) {
		vec.push_back(rand() % 10000);
	}

	Shell_Sort(vec, 0, vec.size());

	for (int x : vec)
		cout << x << " ";

	cin.get();
	return 0;
}
