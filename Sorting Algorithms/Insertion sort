#include<iostream>
#include<vector>
#include<time.h>
using std::vector;
using std::cin;
using std::cout;

// Swap function
template<typename T>
void Swap(T& left, T& right) {
	T temp = left;
	left = right;
	right = temp;
}

// **********************************************************************************************
// Insertion Sort
// https://en.wikipedia.org/wiki/Insertion_sort
template<typename T>
void Insertion_Sort(T& to_be_sorted, int left, int right) {

	for (int i = right - 1; i > left; --i) {
		if (to_be_sorted[i - 1] > to_be_sorted[i])
			Swap(to_be_sorted[i - 1], to_be_sorted[i]);
	}

	for (int i = left + 2; i < right; i++)
	{
		int j = i; 
		typename T::value_type temp = to_be_sorted[i];
		while (temp < to_be_sorted[j - 1])
		{
			to_be_sorted[j] = to_be_sorted[j - 1];
			--j;
		}
		to_be_sorted[j] = temp;
	}
}
// **********************************************************************************************

int main() {
	vector<int> vec;
	srand((unsigned int)time(NULL));

	for (size_t i = 0; i < 10; ++i) {
		vec.push_back(rand() % 10000);
	}

	Insertion_Sort(vec, 0, vec.size());

	for (int x : vec)
		cout << x << " ";

	cin.get();
	return 0;
}
